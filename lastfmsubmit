#!/usr/bin/python

import sys
import time
import getopt
import locale

import lastfm
import lastfm.logger
import lastfm.queue
import lastfm.marshaller

"""This program accepts information about a played song on the commandline,
generates a submission in lastfmsubmitd format, and sends it to the running
lastfmsubmitd."""

if __name__ == '__main__':
    encoding = locale.getpreferredencoding()
    log = lastfm.logger.create_log('lastfmsubmit', debug)

    shortopts = 'a:s:l:d:b:m:o:d'
    longopts = [
        'artist=',
        'title=',
        'length=',
        'time=',
        'album=',
        'mbid=',
        'output=',
        ]

    try:
        opts, args = getopt.getopt(sys.argv[1:], shortopts, longopts)
    except getopt.GetoptError, e:
        print >>sys.stderr, 'error: %s' % e
        sys.exit(1)
    if args:
        print >>sys.stderr, 'extra args: %s' % ' '.join(args)
        sys.exit(1)

    sub = { 'time': time.gmtime() }
    outfile = lastfm.SUBMITD_FIFO

    for opt, arg in opts:
        if opt in ('--artist', '-a'):
            sub['artist'] = unicode(arg, encoding)
        elif opt in ('--title', '-t'):
            sub['title'] = unicode(arg, encoding)
        elif opt in ('--length', '-l'):
            sub['length'] = lastfm.marshaller.parse_length(arg)
        elif opt in ('--time', '-i'):
            try:
                sub['time'] = time.strptime(arg, lastfm.TIME_FMT)
            except ValueError:
                log.error('could not parse time %s' % arg)
                sys.exit(1)
        elif opt in ('--album', '-b'):
            sub['album'] = unicode(arg, encoding)
        elif opt in ('--mbid', '-m'):
            sub['mbid'] = arg
        elif opt in ('--output', '-o'):
            outfile = arg

    for required in ('artist', 'title', 'length'):
        if not sub.has_key(required):
            print >>sys.stderr, 'Must specify %s' % required
            sys.exit(1)

    if outfile == '-':
        print lastfm.marshaller.dump(sub)
    else:
        try:
            writer = lastfm.queue.Writer(outfile, log)
            print >>writer, lastfm.marshaller.dump(sub)
            log.info('Sent %s to submit daemon',
                lastfm.logger.short_name(sub))
        except IOError:
            log.error('Could not write to %s' % outfile)
            sys.exit(1)
