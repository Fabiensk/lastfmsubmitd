#!/usr/bin/python

import sys
import time
import getopt
import locale

import lastfm
import lastfm.logger
import lastfm.queue
import lastfm.marshaller

"""This program accepts information about a played song on the commandline,
generates a submission in lastfmsubmitd format, and sends it to the running
lastfmsubmitd."""

if __name__ == '__main__':
    shortopts = 'a:s:l:d:b:m:o:e:dq'
    longopts = [
        'artist=',
        'title=',
        'length=',
        'time=',
        'album=',
        'mbid=',
        'output=',
        'encoding=',
        'debug',
        'quiet',
        ]

    try:
        opts, args = getopt.getopt(sys.argv[1:], shortopts, longopts)
    except getopt.GetoptError, e:
        print >>sys.stderr, 'error parsing options: %s' % e
        sys.exit(1)

    sub = { 'time': time.gmtime() }
    outfile = lastfm.FIFO
    encoding = locale.getpreferredencoding()
    debug = False
    stderr = True

    for opt, arg in opts:
        if opt in ('--encoding', '-e'):
            encoding = arg
        if opt in ('--debug', '-d'):
            debug = True
        if opt in ('--quiet', '-q'):
            stderr = False

    try:
        log = lastfm.logger.getlog('lastfmsubmit', lastfm.LOGFILE, debug,
            stderr)
    except IOError, e:
        print >>sys.stderr, 'could not open log: %s' % e
        sys.exit(1)

    def try_decode(s):
        try:
            return s.decode('utf-8')
        except UnicodeDecodeError:
            log.warning('Attempting to decode tag as %s' % encoding)
            return s.decode(encoding)

    for opt, arg in opts:
        try:
            if opt in ('--artist', '-a'):
                sub['artist'] = try_decode(arg)
            elif opt in ('--title', '-t'):
                sub['title'] = try_decode(arg)
            elif opt in ('--length', '-l'):
                sub['length'] = lastfm.marshaller.parse_length(arg)
            elif opt in ('--time', '-i'):
                sub['time'] = time.strptime(arg, lastfm.TIME_FMT)
            elif opt in ('--album', '-b'):
                sub['album'] = try_decode(arg)
            elif opt in ('--mbid', '-m'):
                sub['mbid'] = arg
            elif opt in ('--output', '-o'):
                outfile = arg
        except UnicodeDecodeError:
            log.error('Could not decode %s ("%s")' % (opt, arg))
            sys.exit(1)
        except ValueError:
            log.error('Could not parse %s ("%s")' % (opt, arg))
            sys.exit(1)

    for required in ('artist', 'title', 'length'):
        if not sub.has_key(required):
            log.error('No %s specified' % required)
            sys.exit(1)

    if outfile == '-':
        print lastfm.marshaller.dump(sub)
    else:
        try:
            writer = lastfm.queue.Writer(outfile, log)
            print >>writer, lastfm.marshaller.dump(sub)
            log.info('Sent %s to daemon', lastfm.logger.short_name(sub))
        except IOError:
            log.error('Could not write to %s' % outfile)
            sys.exit(1)
