#!/usr/bin/python

import sys
import getopt
import musicbrainz

import lastfm.asyaml

DEF_CD_DEV = '/dev/cdrom'

def get_toc_discid(mb, dev):
    mb.SetDevice(dev)
    try:
        mb.Query(musicbrainz.MBQ_GetCDTOC)
        return mb.GetResultData(musicbrainz.MBE_TOCGetCDIndexId)
    except musicbrainz.MusicBrainzError:
        print >>sys.stderr, "error: could not read TOC from disc"
        sys.exit(1)

def lookup_discid(mb, id):
    mb.QueryWithArgs(musicbrainz.MBQ_GetCDInfoFromCDIndexId, [id])

def lookup_albumid(mb, id):
    mb.SetDepth(4)
    mb.QueryWithArgs(musicbrainz.MBQ_GetAlbumById, [id])

if __name__ == "__main__":
    shortopts = 'd:i:a:'
    longopts = ['device=', 'discid=', 'albumid=']

    mb = musicbrainz.mb()
    mb.SetDepth(2)

    try:
        opts, args = getopt.getopt(sys.argv[1:], shortopts, longopts)
    except getopt.GetoptError, e:
        print >>sys.stderr, "error: %s" % e
        sys.exit(1)

    id = None

    if opts:
        for opt, arg in opts:
            if opt in ('--device', '-d'):
                id = get_toc_discid(mb, arg)
                lookup_discid(mb, id)
            if opt in ('--discid', '-i'):
                id = arg
                lookup_discid(mb, id)
            if opt in ('--albumid', '-a'):
                id = arg
                lookup_albumid(mb, id)
    if not id:
        id = get_toc_discid(mb, DEF_CD_DEV)
        lookup_discid(mb, id)

    matches = mb.GetResultInt(musicbrainz.MBE_GetNumAlbums)
    if matches == 0:
        print >>sys.stderr, "could not find an entry for this CD"
        sys.exit(1)
    if matches > 1:
        print >>sys.stderr, "warning: multiple matches, using first"

    mb.Select1(musicbrainz.MBS_SelectAlbum, 1)
    album = mb.GetResultData(musicbrainz.MBE_AlbumGetAlbumName)
    n = mb.GetResultInt(musicbrainz.MBE_AlbumGetNumTracks)

    if args:
        tracks = map(int, args)
    else:
        tracks = range(1, n+1)

    for i in tracks:
        artist = mb.GetResultData1(musicbrainz.MBE_AlbumGetArtistName, i)
        title = mb.GetResultData1(musicbrainz.MBE_AlbumGetTrackName, i)
        length = mb.GetResultInt1(musicbrainz.MBE_AlbumGetTrackDuration, i)
        id = mb.GetIDFromURL(
            mb.GetResultData1(musicbrainz.MBE_AlbumGetTrackId, i))
        print lastfm.asyaml.Song(artist=artist, title=title,
            length=length/1000, album=album, mbid=id)
